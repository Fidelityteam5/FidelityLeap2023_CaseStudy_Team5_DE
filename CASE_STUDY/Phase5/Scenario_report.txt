Scenario
--------------------------------------------------
Step1: 
report elements(select):
step2:
report sources(from):
step3:
source relationships (on):
step4:
relationship constraint(join type):
step5:
report constraint( where, group by, order by):
Output: SQL
--------------------------------------------------

1.1

Step1: gender, age
Step2: customers
Step3: - 
Step4: - 
Step5: group by gender, age
Output: select gender, age, count(*) from customers group by gender, age;

1.2

Step1: state
Step2: customers
Step3: - 
Step4: - 
Step5: group by state
Output: select state, count(*) from customers group by state;

1.3

Step1: Marital_Status
Step2: customers
Step3: - 
Step4: - 
Step5: group by Marital_Status
Output: select Marital_Status, count(*) from customers group by Marital_Status;

1.4
Step1: 
Step2: 
Step3: 
Step4: 
Step5: 
Output: 
select c.number_of_dependents, ca.asset_objective_id, count(ca.asset_objective_id) as asset_count, sum(ca.total) as total_networth 
from customer c join customer_assets ca on c.customer_id = ca.customer_id  
group by c.number_of_dependents , ca.asset_objective_id 
having sum(ca.total) > 100000 and c.number_of_dependents > 0 ;

1.5
Step1: 
Step2: 
Step3: 
Step4: 
Step5: 
Output:
select cs.asset_objective_id , count(c.customer_id) as count_customers , 
MIN(cs.Total) AS min_assets, MAX(cs.Total) AS max_assets, (max(cs.total) - min(cs.total)) as range_of_assets, 
AVG(cs.Total) AS avg_assets 
FROM customer c join customer_assets cs on c.customer_id = cs.customer_id GROUP BY asset_objective_id; 


2.1
Step1: Risk_Profile_ID, age
Step2: customers, customer_assets, customer_answers, answers, risk_profile
Step3: 
join customer_assets2 ca on c.customer_ID = ca.customer_ID
join customer_answers qa on c.customer_ID = qa.customer_ID
join answers ans on qa.question_id = ans.question_id and qa.answer_id = ans.question_id
join risk_profile rp on ans.Risk_Profile_ID = rp.Risk_Profile_ID
Step4: inner join
Step5: 
group by rp.Risk_Profile_ID, rp.Risk_Profile
order by rp.Risk_Profile_ID, rp.Risk_Profile;
Output:
select rp.Risk_Profile_ID, rp.Risk_Profile, avg(c.age)
from customers c
join customer_assets2 ca on c.customer_ID = ca.customer_ID
join customer_answers qa on c.customer_ID = qa.customer_ID
join answers ans on qa.question_id = ans.question_id and qa.answer_id = ans.question_id
join risk_profile rp on ans.Risk_Profile_ID = rp.Risk_Profile_ID
group by rp.Risk_Profile_ID, rp.Risk_Profile
order by rp.Risk_Profile_ID, rp.Risk_Profile;

2.2 
Step1: Risk_Profile_ID, total
Step2: customer_assets, customer_answers, answers, risk_profile
Step3:
join customer_answers qa on ca.customer_ID = qa.customer_ID
join answers ans on qa.question_id = ans.question_id and qa.answer_id = ans.question_id
join risk_profile rp on ans.Risk_Profile_ID = rp.Risk_Profile_ID
Step4: inner
Step5:
group by rp.Risk_Profile_ID, rp.Risk_Profile
order by rp.Risk_Profile_ID, rp.Risk_Profile
Output:
select rp.Risk_Profile_ID, rp.Risk_Profile, avg(ca.total)
from customer_assets2 ca
join customer_answers qa on ca.customer_ID = qa.customer_ID
join answers ans on qa.question_id = ans.question_id and qa.answer_id = ans.question_id
join risk_profile rp on ans.Risk_Profile_ID = rp.Risk_Profile_ID
group by rp.Risk_Profile_ID, rp.Risk_Profile
order by rp.Risk_Profile_ID, rp.Risk_Profile;

2.3 
Step1: Risk_Profile_ID, state
Step2: customers, customer_assets, customer_answers, answers, risk_profile
Step3:
join customer_assets2 ca on c.customer_ID = ca.customer_ID
join customer_answers qa on c.customer_ID = qa.customer_ID
join answers ans on qa.question_id = ans.question_id and qa.answer_id = ans.question_id
join risk_profile rp on ans.Risk_Profile_ID = rp.Risk_Profile_ID
Step4: inner
Step5:
order by rp.Risk_Profile, c.state
Output:
select rp.Risk_Profile_ID, rp.Risk_Profile, c.state 
from customers c
join customer_assets2 ca on c.customer_ID = ca.customer_ID
join customer_answers qa on c.customer_ID = qa.customer_ID
join answers ans on qa.question_id = ans.question_id and qa.answer_id = ans.question_id
join risk_profile rp on ans.Risk_Profile_ID = rp.Risk_Profile_ID
order by rp.Risk_Profile, c.state;


-- Scenario 3
